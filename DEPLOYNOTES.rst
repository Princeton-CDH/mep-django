.. _DEPLOYNOTES:

Deploy and Upgrade notes
========================

1.10
----

* In order for Books and Members pages to appear in site menus, Link Pages
  linking to them (``/books`` and ``/members``) must now be created in Wagtail
  and added to the Home Page, with "Show in menus" checked.
* The search backend has been enabled for the Wagtail CMS, so a single reindex
  is required to make existing static content searchable::

    python manage.py update_index

1.9
---

* Settings are now configured with django-split-settings as a module;
  ``local_settings.py`` must be moved to ``mep/settings/local_settings.py``,
  and ``import os`` must be included in the file.
* The minimum required Python version has been bumped to 3.12. Please upgrade to
  this version before installing updated dependencies.

1.8
---

* The minimum required Solr version has been bumped to 9.2. Please upgrade to this
  version, copy all files under `solr_conf/conf/` to the configured Solr configset,
  and restart Solr to ensure the managed schema is loaded. Then update the schema
  and reindex::

    python manage.py index

1.3
---

* Member sorting has been revised, so people should be reindexed in Solr::

  python manage.py index -i person

1.2
---

* Revised data exports should be generated::

  python manage.py export_members
  python manage.py export_events
  python manage.py export_books

* To use the new 100 years twitterbot code, you must configure
  **TWITTER_100YEARS** in ``localsettings.py`` with Twitter API and
  access credentials for the account where tweets should be posted, and
  run the `twitterbot_100years` manage command in `schedule` mode
  as a daily cron job every morning before 9am::

    python twitterbot_100years schedule


1.1.1
-----

* Includes Solr configuration changes to address a stopword search problem
  on the book search. Copy all files under `solr_conf/conf/`
  to the configured Solr configset and restart Solr to ensure the managed schema is
  loaded. Then update the schema and reindex::

    python manage.py solr_schema
    python manage.py index

1.1
---

* Includes updates to Solr managed schema. Copy all files under `solr_conf/conf/`
  to the configured Solr configset and restart Solr to ensure the managed schema is
  loaded. Then update the schema and reindex::

    python manage.py solr_schema
    python manage.py index

* The migration to calculate purchase dates and adjust start dates for
  subscription renewals has been revised and should be re-run::

    python manage.py migrate accounts 0032
    python manage.py migrate accounts

1.0
---

XML sitemaps require update to Solr schema to track last modification
time of indexed items. Update the schema and reindex everything.

  python manage.py solr_schema
  python manage.py index -c all -i none
  python manage.py index

0.29
----

Updates to the book search & browse require a Solr configuration
update and work reindex. Copy all files under `solr_conf/conf/` to your
configured Solr configset and restart Solr to ensure the managed schema is
loaded. Then update the schema, clear works from the index, and reindex::

  python manage.py solr_schema
  python manage.py index -c work -i none
  python manage.py index -i work

0.28.2
------

Django Admin work search requires that the Solr configuration be
updated and works reindexed. Copy all files under `solr_conf/conf/` to your
configured Solr configset and restart Solr to ensure the managed schema is
loaded. Then update the schema, clear works from the index, and reindex::

  python manage.py solr_schema
  python manage.py index -c work -i none
  python manage.py index -i work

0.28
----

The addition of slugs for book urls requires a Solr reindex after running
migrations::

  python manage.py index -i work

0.27
----

Bibliographic metadata search for works requires that the Solr configuration be
updated and works reindexed. Copy all files under `solr_conf/conf/` to your
configured Solr configset and restart Solr to ensure the managed schema is
loaded. Then update the schema, clear works from the index, and then reindex::

  python manage.py solr_schema
  python manage.py index -c work -i none
  python manage.py index -i work


Data exports for members and events can be generated by manage command::

  python manage.py export_members
  python manage.py export_events


0.25
----

* The name of the canonical `Location` representing the library should be
  changed to "Shakespeare and Company" (no &), if it is not already. This change
  has been reflected in an earlier migration.

0.24
----

Partial name and accent-agnostic search on the members requires that the Solr
configuration be updated and members reindexed. Copy all files under
`solr_conf/conf/` to your configured Solr configset and restart Solr
to ensure the managed schema is loaded. Then update the schema, clear
people from the index, and then reindex::

  python manage.py solr_schema
  python manage.py index -c person -i none
  python manage.py index -i person

0.23
----

* This release requires library members be cleared and reindexed in order
  to update the gender field, add the new arrondissement field for use in
  faceting, and ensure all members have slugs for urls::

  python manage.py index -c person -i person

* This release adds new Page content types for blog-style essay content and a
  landing page for blog entries. If content exists that should be migrated to
  these pages, new pages with the correct content type must be created.

* You must set **MAPBOX_ACCESS_TOKEN**, **MAPBOX_BASEMAP**, and **PARIS_OVERLAY**
  in ``local_settings.py`` in order to render the address map shown on member
  detail pages. See the note in ``local_settings.py.sample`` for more information.


0.22
----

* Member search filter on nationality and the new card browse require
  a Solr schema update and reindex::

  python manage.py solr_schema
  python manage.py index -i person
  python manage.py index -i card

0.21
----

* You must configure **GTAGS_ANALYTICS_ID** and **GTAGS_ANALYTICS_ENV** in
  ``local_settings.py`` in order for Google Analytics to function. See the note
  in ``local_settings.py.sample`` for more information.

* You must configure **CSP_REPORT_ONLY** and **CSP_REPORT_URI** in
  ``local_settings.py`` in order for Content-Security Policy to function. See
  the note in ``local_settings.py.sample`` for more information and suggested
  settings for your environment. Note that the policies themselves are defined
  in the ``settings.py`` file but can be overridden in ``local_settings.py``,
  which you may want to do when developing.

* After this version is deployed, run ``import_figgy_cards``
  to migrate old pudl image urls in Bibliography and Footnote records to
  use the new objects in PUL's Figgy. The CSV file mapping old paths
  to new Figgy ids is included as a fixture for convenience::

    python manage.py import_figgy_cards mep/accounts/fixtures/pudl-to-figgy-mapping.csv

0.17
----

* This release requires a reindex to update the birth and death year fields for
  use in faceting.

0.16
----

* This release requires a reindex to incorporate a bugfix for account partial
  date handling.

0.15
----

* This release requires a reindex to update the ``sex`` field for use in
  faceting.

0.14
----

* You must configure **OCLC_WSKEY** in ``localsettings.py`` before
  you can use the new ``reconcile_oclc`` manage command. You should
  also configure a TECHNICAL_CONTACT email address.

0.13
----

* Member search requires an updated solrconfig.xml. Copy
  `solr_conf/conf/solrconfig.xml` to your configured Solr configset
  directory.


0.12
----

* Index book data in Solr to populate the book browse::

  python manage.py index -i item


0.11
----

* Solr connection information should be configured in local settings as a
  **SOLR_CONNECTION**. See the sample Solr config in
  ``local_settings.py.sample``.

* The Solr configuration in the ``solr_conf`` directory must be installed
  on the Solr server the ``configsets``  directory prior to deployment
  with a name matching the **CONFIGSET** in the **SOLR_CONNECTIONS**
  default configuration.  See `Solr Config Sets documentation <https://lucene.apache.org/solr/guide/6_6/config-sets.html#config-sets>`_ for more details.
  Possible sequence of commands, starting from the server where the
  mep-django codebase is checked out::

     scp -r mep-django/solr_config solr-server:sandco

  Then on the server where Solr is running::

     mkdir -p /var/lib/solr/data/configsets
     cp -r sandco /var/lib/solr/data/configsets/
     chown solr:solr -R /var/lib/solr/data/configsets

* After the configset is in place on the server, run ``solr_schema`` to
  configure the configured Solr core. This command will create the core
  with the configured **CONFIGSET** if the core does not already exist::

  python manage.py solr_schema

* Index member data into Solr::

  python manage.py index

0.10
----

* Switching from Mezzanine to Wagtail requires a manual migration *before*
  installing the new version to avoid migration dependency conflicts::

     python manage.py migrate pages zero

* Wagtail provides predefined groups for *Editor* and *Moderator*. Users
  who were previously in the *Content Editor* group should be added
  to one of these, and the *Content Editor* group should be removed.

* Run ``python manage.py setup_site_pages`` to create stub pages for all
  site content needed for main site navigation.




0.6 Borrowing events and Title stubs
-------------------------------------

* Title stub records should be imported from XML using the
  **import_titles** manage command. The title XML file is located in
  https://github.com/Princeton-CDH/mapping-expatriate-paris and named
  `borrowed-titles.xml`.

* Borrowing events should be imported from XML using the
  **import_cards** manage command. Card XML files are located in
  https://github.com/Princeton-CDH/mapping-expatriate-paris under
  `transcriptions/cards/`. The command expects to be given the cards
  directory and will find all xml files under it, including in subdirectories.


0.3 Data Entry Improvements
---------------------------

* This update adds Mezzanine and enables the Django Site framework.
  The default Site should be configured after migrations complete.

0.2 Logbook admin
-----------------
* Logbook data should be imported from XML using the
**import_logbooks** manage command. The logbook XML is located in
https://github.com/Princeton-CDH/mapping-expatriate-paris under
`transcriptions/logbooks/*.xml`. The command tasks a list of files using
standard shell globbing. The import should be from the *develop* branch, which
has been cleaned up for import.


0.1 Personography admin
-----------------------

* The application must be configured with a GeoNames username and
  Mapbox access token in order to use GeoNames and Mapbox APIs.
* Personography data should be imported from XML using the
  **import_personography** manage command.  The personography XML
  for import is included in https://github.com/Princeton-CDH/mapping-expatriate-paris
  under `transcriptions/personography.xml`
  *NOTE*: import should be run from the *develop* branch, which has
  the latest version and has been cleaned up for import.
