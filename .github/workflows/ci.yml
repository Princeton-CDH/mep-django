name: ci

on: [push, pull_request]

env:
  SOLR_VERSION: 6.6.5

jobs:

  build-static:
    name: Build static files
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup node
      uses: actions/setup-node@v2-beta
      with:
        node-version: 10
    - name: Cache node modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          ${{ runner.os }}-npm-
    - name: Install dependencies
      run: npm ci
    - name: Run webpack build
      run: npm run build:prod
    - name: Upload built files
      uses: actions/upload-artifact@v2
      with:
        name: webpack-bundle
        path: bundles/
    - name: Upload stats file
      uses: actions/upload-artifact@v2
      with:
        name: webpack-bundle
        path: webpack-stats.json

  ts-unit:
    name: TypeScript unit tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup node
      uses: actions/setup-node@v2-beta
      with:
        node-version: 10
    - name: Cache node modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          ${{ runner.os }}-npm-
    - name: Install dependencies
      run: npm ci
    - name: Run Jest
      run: npx jest --collectCoverage
    - name: Upload test coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        flags: typescript

  py-unit:
    name: Python unit tests
    needs: build-static
    runs-on: ubuntu-latest
    services:
      db:
        image: mariadb
        env:
          MYSQL_DATABASE: sandco
          MYSQL_ROOT_PASSWORD: sandco
        ports:
        - 3306:3306
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.5
    - name: Cache pip
      uses: actions/cache@v2
      with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/*requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ hashFiles('**/*requirements.txt') }}
            ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        pip install wheel
        pip install -r requirements.txt
        pip install -r dev-requirements.txt
    - name: Install and configure Solr
      run: bash ci/config_solr.sh
    - name: Download webpack bundle
      uses: actions/download-artifact@v2
      with:
        name: webpack-bundle
    - name: Setup local_settings.py
      run: |
        cp ci/testsettings.py mep/local_settings.py
        python -c "import uuid; print('SECRET_KEY = \'%s\'' % uuid.uuid4())" >> mep/local_settings.py
    - name: Run pytest
      run: py.test --cov=./ --cov-report=xml
    - name: Upload test coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        flags: python

  a11y:
    name: Accessibility tests
    needs: build-static
    runs-on: ubuntu-latest
    services:
      db:
        image: mariadb
        env:
          MYSQL_DATABASE: sandco
          MYSQL_ROOT_PASSWORD: sandco
        ports:
        - 3306:3306
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.5
    - name: Cache pip
      uses: actions/cache@v2
      with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/*requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ hashFiles('**/*requirements.txt') }}
            ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        pip install wheel
        pip install -r requirements.txt
        pip install -r dev-requirements.txt
        npm install pa11y-ci
    - name: Install and configure Solr
      run: bash ci/config_solr.sh
    - name: Setup local_settings.py
      run: |
        cp ci/testsettings.py mep/local_settings.py
        python -c "import uuid; print('SECRET_KEY = \'%s\'' % uuid.uuid4())" >> mep/local_settings.py
    - name: Download webpack bundle
      uses: actions/download-artifact@v2
      with:
        name: webpack-bundle
    - name: Migrate database
      run: python manage.py migrate
    - name: Load and index sample data
      run: |
        python manage.py loaddata sample_people sample_works wagtail_pages
        python manage.py index
    - name: Run test server
      run: python manage.py runserver --insecure &
    - name: Run pa11y
      run: |
        npx pa11y-ci \
        --sitemap http://localhost:8000/sitemap.xml \
        --sitemap http://localhost:8000/sitemap-pages.xml \
        --sitemap http://localhost:8000/sitemap-members.xml \
        --sitemap http://localhost:8000/sitemap-member-activities.xml \
        --sitemap http://localhost:8000/sitemap-member-borrowing.xml \
        --sitemap http://localhost:8000/sitemap-member-card-list.xml \
        --sitemap http://localhost:8000/sitemap-member-card-detail.xml \
        --sitemap http://localhost:8000/sitemap-books.xml \
        --sitemap http://localhost:8000/sitemap-book-circulation.xml \
        --sitemap http://localhost:8000/sitemap-book-card-list.xml \
        --sitemap-find example.com --sitemap-replace localhost:8000
