# Generated by Django 3.2.22 on 2023-10-18 18:21

from django.db import migrations
import mep.pages.models
import wagtail.blocks
import wagtail.documents.blocks
import wagtail.embeds.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtail.snippets.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('pages', '0012_alter_body_content_blocks'),
    ]

    operations = [
        migrations.AlterField(
            model_name='contentlandingpage',
            name='body',
            field=wagtail.fields.StreamField([('paragraph', wagtail.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'bold', 'italic', 'link', 'ol', 'ul', 'hr', 'blockquote', 'document', 'superscript', 'subscript', 'strikethrough', 'code'])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('alternative_text', wagtail.blocks.TextBlock(help_text='Alternative text for visually impaired users to\nbriefly communicate the intended message of the image in this context.', required=True)), ('caption', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'superscript'], required=False))])), ('svg_image', wagtail.blocks.StructBlock([('image', wagtail.documents.blocks.DocumentChooserBlock()), ('alternative_text', wagtail.blocks.TextBlock(help_text='Alternative text for visually impaired users to\nbriefly communicate the intended message of the image in this context.', required=True)), ('caption', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'superscript'], required=False)), ('extended_description', wagtail.blocks.RichTextBlock(features=['p'], help_text='This text will only be read to     non-sighted users and should describe the major insights or     takeaways from the graphic. Multiple paragraphs are allowed.', required=False))])), ('document', wagtail.documents.blocks.DocumentChooserBlock()), ('footnotes', wagtail.blocks.RichTextBlock(features=['ol', 'ul', 'bold', 'italic', 'link'], form_classname='footnotes')), ('linkable_section', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock()), ('anchor_text', wagtail.blocks.CharBlock(help_text='Short label for anchor link')), ('body', wagtail.blocks.RichTextBlock(features=['h3', 'h4', 'bold', 'italic', 'link', 'ol', 'ul', 'hr', 'blockquote', 'document', 'superscript', 'subscript', 'strikethrough', 'code']))])), ('embed', wagtail.embeds.blocks.EmbedBlock())], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='contentpage',
            name='authors',
            field=wagtail.fields.StreamField([('author', wagtail.snippets.blocks.SnippetChooserBlock(mep.pages.models.Person))], blank=True, help_text='Select or create new people to add as authors.', use_json_field=True),
        ),
        migrations.AlterField(
            model_name='contentpage',
            name='body',
            field=wagtail.fields.StreamField([('paragraph', wagtail.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'bold', 'italic', 'link', 'ol', 'ul', 'hr', 'blockquote', 'document', 'superscript', 'subscript', 'strikethrough', 'code'])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('alternative_text', wagtail.blocks.TextBlock(help_text='Alternative text for visually impaired users to\nbriefly communicate the intended message of the image in this context.', required=True)), ('caption', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'superscript'], required=False))])), ('svg_image', wagtail.blocks.StructBlock([('image', wagtail.documents.blocks.DocumentChooserBlock()), ('alternative_text', wagtail.blocks.TextBlock(help_text='Alternative text for visually impaired users to\nbriefly communicate the intended message of the image in this context.', required=True)), ('caption', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'superscript'], required=False)), ('extended_description', wagtail.blocks.RichTextBlock(features=['p'], help_text='This text will only be read to     non-sighted users and should describe the major insights or     takeaways from the graphic. Multiple paragraphs are allowed.', required=False))])), ('document', wagtail.documents.blocks.DocumentChooserBlock()), ('footnotes', wagtail.blocks.RichTextBlock(features=['ol', 'ul', 'bold', 'italic', 'link'], form_classname='footnotes')), ('linkable_section', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock()), ('anchor_text', wagtail.blocks.CharBlock(help_text='Short label for anchor link')), ('body', wagtail.blocks.RichTextBlock(features=['h3', 'h4', 'bold', 'italic', 'link', 'ol', 'ul', 'hr', 'blockquote', 'document', 'superscript', 'subscript', 'strikethrough', 'code']))])), ('embed', wagtail.embeds.blocks.EmbedBlock())], use_json_field=True),
        ),
        migrations.AlterField(
            model_name='contentpage',
            name='editors',
            field=wagtail.fields.StreamField([('editor', wagtail.snippets.blocks.SnippetChooserBlock(mep.pages.models.Person))], blank=True, help_text='Select or create new people to add as editors.', use_json_field=True),
        ),
        migrations.AlterField(
            model_name='essaylandingpage',
            name='body',
            field=wagtail.fields.StreamField([('paragraph', wagtail.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'bold', 'italic', 'link', 'ol', 'ul', 'hr', 'blockquote', 'document', 'superscript', 'subscript', 'strikethrough', 'code'])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('alternative_text', wagtail.blocks.TextBlock(help_text='Alternative text for visually impaired users to\nbriefly communicate the intended message of the image in this context.', required=True)), ('caption', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'superscript'], required=False))])), ('svg_image', wagtail.blocks.StructBlock([('image', wagtail.documents.blocks.DocumentChooserBlock()), ('alternative_text', wagtail.blocks.TextBlock(help_text='Alternative text for visually impaired users to\nbriefly communicate the intended message of the image in this context.', required=True)), ('caption', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'superscript'], required=False)), ('extended_description', wagtail.blocks.RichTextBlock(features=['p'], help_text='This text will only be read to     non-sighted users and should describe the major insights or     takeaways from the graphic. Multiple paragraphs are allowed.', required=False))])), ('document', wagtail.documents.blocks.DocumentChooserBlock()), ('footnotes', wagtail.blocks.RichTextBlock(features=['ol', 'ul', 'bold', 'italic', 'link'], form_classname='footnotes')), ('linkable_section', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock()), ('anchor_text', wagtail.blocks.CharBlock(help_text='Short label for anchor link')), ('body', wagtail.blocks.RichTextBlock(features=['h3', 'h4', 'bold', 'italic', 'link', 'ol', 'ul', 'hr', 'blockquote', 'document', 'superscript', 'subscript', 'strikethrough', 'code']))])), ('embed', wagtail.embeds.blocks.EmbedBlock())], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='essaypage',
            name='authors',
            field=wagtail.fields.StreamField([('author', wagtail.snippets.blocks.SnippetChooserBlock(mep.pages.models.Person))], blank=True, help_text='Select or create new people to add as authors.', use_json_field=True),
        ),
        migrations.AlterField(
            model_name='essaypage',
            name='body',
            field=wagtail.fields.StreamField([('paragraph', wagtail.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'bold', 'italic', 'link', 'ol', 'ul', 'hr', 'blockquote', 'document', 'superscript', 'subscript', 'strikethrough', 'code'])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('alternative_text', wagtail.blocks.TextBlock(help_text='Alternative text for visually impaired users to\nbriefly communicate the intended message of the image in this context.', required=True)), ('caption', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'superscript'], required=False))])), ('svg_image', wagtail.blocks.StructBlock([('image', wagtail.documents.blocks.DocumentChooserBlock()), ('alternative_text', wagtail.blocks.TextBlock(help_text='Alternative text for visually impaired users to\nbriefly communicate the intended message of the image in this context.', required=True)), ('caption', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'superscript'], required=False)), ('extended_description', wagtail.blocks.RichTextBlock(features=['p'], help_text='This text will only be read to     non-sighted users and should describe the major insights or     takeaways from the graphic. Multiple paragraphs are allowed.', required=False))])), ('document', wagtail.documents.blocks.DocumentChooserBlock()), ('footnotes', wagtail.blocks.RichTextBlock(features=['ol', 'ul', 'bold', 'italic', 'link'], form_classname='footnotes')), ('linkable_section', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock()), ('anchor_text', wagtail.blocks.CharBlock(help_text='Short label for anchor link')), ('body', wagtail.blocks.RichTextBlock(features=['h3', 'h4', 'bold', 'italic', 'link', 'ol', 'ul', 'hr', 'blockquote', 'document', 'superscript', 'subscript', 'strikethrough', 'code']))])), ('embed', wagtail.embeds.blocks.EmbedBlock())], use_json_field=True),
        ),
        migrations.AlterField(
            model_name='essaypage',
            name='editors',
            field=wagtail.fields.StreamField([('editor', wagtail.snippets.blocks.SnippetChooserBlock(mep.pages.models.Person))], blank=True, help_text='Select or create new people to add as editors.', use_json_field=True),
        ),
        migrations.AlterField(
            model_name='homepage',
            name='body',
            field=wagtail.fields.StreamField([('paragraph', wagtail.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'bold', 'italic', 'link', 'ol', 'ul', 'hr', 'blockquote', 'document', 'superscript', 'subscript', 'strikethrough', 'code'])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('alternative_text', wagtail.blocks.TextBlock(help_text='Alternative text for visually impaired users to\nbriefly communicate the intended message of the image in this context.', required=True)), ('caption', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'superscript'], required=False))])), ('svg_image', wagtail.blocks.StructBlock([('image', wagtail.documents.blocks.DocumentChooserBlock()), ('alternative_text', wagtail.blocks.TextBlock(help_text='Alternative text for visually impaired users to\nbriefly communicate the intended message of the image in this context.', required=True)), ('caption', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'superscript'], required=False)), ('extended_description', wagtail.blocks.RichTextBlock(features=['p'], help_text='This text will only be read to     non-sighted users and should describe the major insights or     takeaways from the graphic. Multiple paragraphs are allowed.', required=False))])), ('document', wagtail.documents.blocks.DocumentChooserBlock()), ('footnotes', wagtail.blocks.RichTextBlock(features=['ol', 'ul', 'bold', 'italic', 'link'], form_classname='footnotes')), ('linkable_section', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock()), ('anchor_text', wagtail.blocks.CharBlock(help_text='Short label for anchor link')), ('body', wagtail.blocks.RichTextBlock(features=['h3', 'h4', 'bold', 'italic', 'link', 'ol', 'ul', 'hr', 'blockquote', 'document', 'superscript', 'subscript', 'strikethrough', 'code']))])), ('embed', wagtail.embeds.blocks.EmbedBlock())], use_json_field=True),
        ),
    ]
