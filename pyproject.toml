[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "mep-django"
description = "Shakespeare and Company Project - Python/Django web application"
requires-python = ">=3.12"
license = { text = "Apache-2" }
classifiers = ["Programming Language :: Python :: 3"]
dependencies = [
    "Django>=5.2,<5.3",
    "django-grappelli>=3.0",
    "cached_property",
    "django-cas-ng",
    "pucas>=0.8",
    "neuxml>=1.0.0",
    "viapy>=0.4",
    "wagtail>=6.4,<6.5",
    "django-autocomplete-light>=3.9",
    "python-dateutil",
    "django-apptemplates",
    "py-flags",
    "django-tabular-export>=1.2.0",
    "django-webpack-loader<=2.0",
    "parasolr>=0.9.2",
    "django-widget-tweaks",
    # pymarc api changes significantly in 5.0
    "pymarc<5.0",
    "progressbar2",
    "rdflib>=7.0",
    "djiffy>=1.0.0",
    "django-csp",
    "bleach",
    "django-fullurl",
    "unidecode",
    "stop_words",
    # as of 2024-05-08 django-markdownify==0.9.4 causes an error with bleach
    "django-markdownify==0.9.3",
    "tweepy",
    # specify bs4 version to avoid wagtail version conflict
    "beautifulsoup4<4.9",
    "psycopg2-binary",
    # 4.0 is not compatible with django 3.2, so pin to pre 4.0
    "django-import-export<4.0",
    "django-adminlogentries",
    "django-split-settings",
]
dynamic = ["version", "readme"]

[tool.setuptools]
packages = ["mep"]

[tool.setuptools.dynamic]
version = { attr = "mep.__version__" }
readme = { file = ["README.rst"] }

[project.optional-dependencies]
dev = [
    "pytest>=5",
    "pytest-django>=3.4.7",
    "pytest-cov",
    "pytest-ordering",
    # pin to pre 4.4, which forces django 4.2
    "django-debug-toolbar<=4.4",
    "sphinx",
    "wheel",
    "pre-commit",
    "wagtail-factories<4.1",
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "mep.settings"
# look for tests in standard django test location
python_files = ["mep/**/tests.py", "mep/**/tests/*.py"]
addopts = "-p parasolr.django.disconnect_indexing"
# limit testpath to speed up collecting step
testpaths = "mep"
markers = ["last", "second_to_last"]

[tool.black]
line-length = 88
target-version = ['py39']
# include = ''
# extend-exclude = ''
