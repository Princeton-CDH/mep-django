- name: Make a directory for virtualenv
  file:
      path: "{{ deploy }}/env"
      state: directory
      mode: "u+rwx,g+rwx,o-rw"
- name: Build a virtualenvironment
  command: "virtualenv env"
  args:
    chdir: '{{ deploy }}'
    # Not quite, but close enough to check
    creates: "{{ deploy}}/env"
- name: Upgrade pip to latest in virtualenv
  pip:
    name: pip
    state: latest
    virtualenv: "{{ deploy }}/env"
  ignore_errors: true
- name: Set perms
  file:
      path: "{{ deploy }}/env"
      state: directory
      mode: "u+rwx,g+rwx,o-rw"
- name: Install requirements via pip (MySQLdb should be system version and skipped)
  pip:
    virtualenv: "{{ deploy }}/env"
    requirements: "{{ deploy }}/requirements.txt"
- name: Install local_settings.py
  synchronize:
    src: /home/deploy/{{ djangoapp }}/local_settings.py
    dest: "{{ deploy }}/{{ djangoapp }}/local_settings.py"
  delegate_to: '{{ inventory_hostname }}'
- name: Run ./manage.py collectstatic
  django_manage:
    command: collectstatic
    app_path: "{{ deploy }}"
    virtualenv: "{{ deploy }}/env"
- name: Configure CACHE for django-compressor
  file:
    path: '{{ deploy }}/static/CACHE'
    state: directory
    owner: deploy
    group: apache
    mode: 0770
- name: Set ownership recursively
  file:
    path: "{{ deploy }}"
    state: directory
    owner: deploy
    group: apache
    recurse: yes
  ignore_errors: true
