.search-form {
    @include padding-container;
    padding-top: 1rem;
    background: $white;

    form {
        display: flex;
        flex-flow: row wrap;
        justify-content: center;
        align-items: center;
        text-align: center;
        position: relative;
    }

    input[name=query] {
        flex: auto;
        padding: .2rem 0;
        font-size: 0.8rem;
        background-color: transparent;
        border-width: 0 0 2px;
        border-color: $black;
        border-bottom-style: dotted;
        outline: none;
        transition: border 0.5s;

        &::placeholder {
          color: $nearly-black;
          opacity: 1; /* Firefox */
        }

        + label {
            display: inline-block;
            width: 1rem;
            height: 1rem;
            background-image: url('/static/img/icons/search.svg');
            background-position: center center;
            background-repeat: no-repeat;
        }

        &:focus {
            border-bottom-style: solid;
        }
    }

    input[type=number] {
        appearance: textfield;
        font-size: 0.8rem;
        color: $black;
        text-align: center;
        border: 1px solid $light-grey;

        // remove spinners in webkit browsers due to bug: when they are active,
        // clicking the down arrow will eventually cause input value to "wrap"
        // from min back up to max, rather than staying at min
        &::-webkit-inner-spin-button,
        &::-webkit-outer-spin-button {
            -webkit-appearance: none;
            margin: 0;
            display: none;
        }

        @media (min-width: $breakpoint-s) {
            border-color: $black;
            border-style: dotted;
            border-width: 0;
            border-bottom-width: .1rem;

            &:focus {
                border-bottom-style: solid;
            }
        }
    }
     
    // fade animation for when count changes
    span.count {
        opacity: 1;
        transition: opacity 0.25s ease-in-out;
        
        &[aria-busy] {
            opacity: 0;
        }
    }

    fieldset.group {
        width: 100%;
        font-size: 0.8rem;

        > legend {
            width: 100%;
            text-align: left;
            font-weight: bold;
            padding: 1.75rem 0 0.5rem;
        }
    
        // chrome doesn't allow fieldsets to use flex, so we have to do this
        // https://bugs.chromium.org/p/chromium/issues/detail?id=262679
        .inner {
            width: 100%;
            display: flex;
            flex-flow: row wrap;
            justify-content: flex-start;
            align-items: center;
        }

        // 2px vert spacing on mobile, 2px horizontal spacing on tablet & above
        .inner > label,
        .inner > .facet {
            margin-bottom: 0.1rem;

            @media (min-width: $breakpoint-s) {
                margin-right: 0.1rem;
    
                &:last-of-type {
                    margin-right: 0;
                }
            }
        }
        
        /* boolean facet */
        .inner > label {
            height: 2.2rem;
            background: white;
            flex: auto;
            display: flex;
            flex-flow: row nowrap;
            justify-content: flex-start;
            padding: 0 .7rem;
            align-items: center;
            border: 0.1rem solid $transparent;
            box-sizing: border-box;

            @media (min-width: $breakpoint-s) {
                padding: 0 .5rem;
            }

            &:last-child {
                margin-right: 0;
            }

            img.icon {
                max-height: 1.5rem;
                margin-left: 0.5rem;
            }

            .count {
                font-size: 0.6rem;
            }

            span[role=tooltip] {
                position: absolute;
                height: 100%;
                right: .2rem;
                top: 0;

                @media (min-width: $breakpoint-s) {
                    right: .5rem;
                }
            }
        }

        .inner > input:focus + label {
            border-color: $green;
        }

        .inner > input[type=checkbox] + label {
            cursor: pointer;
        }

        // uses after so it can stack with tooltip info icon
        .inner > input[type=checkbox] + label::after {
            content: '';
            opacity: 0;
            position: absolute;
            width: .75rem;
            height: .75rem;
            right: .5rem;
            top: calc(50% - (.75rem / 2));
            background-image: url("/static/img/icons/filter_clicked_state.svg");
            background-repeat: no-repeat;
            background-position: center;
            pointer-events: none;
            transition: opacity .25s ease;
        }

        .inner > input:checked + label::after {
            opacity: 1;
        }

        // full-width input styles for mobile only
        @media (max-width: calc(#{$breakpoint-s} - 1px)) {
            .inner {
                width: 100vw;
            }

            > legend {
                margin-left: $gutter-xs;
                margin-right: $gutter-xs;
            }
        }
    }

    // errors output
    div[role=alert].errors {
        width: 100%;
        text-align: left;
        padding-top: 1.75rem;
        font-size: 0.8rem;

        span { // "Errors:" text
            font-weight: bold;
        }

        > ul { // master list of errors
            list-style: none;
            display: block;
            background: white;
            padding: 0.8rem;
            position: relative;
        }

        li {
            padding-left: 1rem;
        }

        // error icons
        li::before {
            content: url('/static/img/icons/error-circle.svg');
            width: 0.75rem;
            height: 0.75rem;
            position: absolute;
            left: 0.8rem;
            padding-top: 0.05rem;
        }
    }

    .total-results,
    .loader {
        font-family: $serif;
        font-style: italic;
        font-size: 0.8rem;
        margin: 3rem 0 1rem;
        transition: opacity 0.5s;
    }

    .loader {
        opacity: 0;
        position: absolute;
        bottom: 0;
        flex: none;
    }

    &[aria-busy] {
        .total-results {
            opacity: 0;
        }
        .loader {
            opacity: 1;
        }
    }
}